/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import javax.swing.JOptionPane;
import dbconn.ConexionBD;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;


/**
 *
 * @author eabr1
 */
public class Proveedores extends javax.swing.JFrame {

    /**
     * Creates new form Proveedores
     */
    public Proveedores() {
        initComponents();
        limpiarCombobox();
        llenarComboBox1();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        cbProveedores = new javax.swing.JComboBox<>();
        cbHabilitado = new javax.swing.JCheckBox();
        btnEliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtRNC = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Proveedores");

        cbProveedores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbHabilitado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbHabilitado.setText("Habilitado");

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Proveedores");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("RNC");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEliminar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(181, 181, 181))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtRNC, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbHabilitado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1)))))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(cbProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtRNC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbHabilitado)
                        .addComponent(jButton1)))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int selectedIndex = cbProveedores.getSelectedIndex();

        if(selectedIndex == -1){
            JOptionPane.showMessageDialog(Proveedores.this, "Debe seleccionar un elemento.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        //        else if(contrasenaUsuario == null || contrasenaUsuario.length() == 0){
            //            JOptionPane.showMessageDialog(UsuariosTipos.this, "El campo Clave no puede estar vacio.", "Error", JOptionPane.ERROR_MESSAGE);
            //        }
        //
        //        else if(contrasenaUsuario2 == null || contrasenaUsuario2.length() == 0){
            //            JOptionPane.showMessageDialog(UsuariosTipos.this, "El campo Confirmar no puede estar vacio.", "Error", JOptionPane.ERROR_MESSAGE);
            //        }
        //
        //        else if(!contrasenaUsuario.equals(contrasenaUsuario2)){
            //            JOptionPane.showMessageDialog(UsuariosTipos.this, "Las claves no coinciden.", "Error", JOptionPane.ERROR_MESSAGE);
            //        }
        else{
            Object selectedItem = cbProveedores.getSelectedItem();

            String nombreUsuario = selectedItem.toString();
            try {
                // Obtener una conexión de la base de datos
                Connection conexion = ConexionBD.obtenerConexion();

                // Consulta SQL para verificar el inicio de sesión
                String consulta = "DELETE FROM ISO610.Proveedores Where NombreComercial = ?";
                PreparedStatement preparedStatement = conexion.prepareStatement(consulta);
                preparedStatement.setString(1, nombreUsuario);

                int filasInsertadas = preparedStatement.executeUpdate();

                JOptionPane.showMessageDialog(Proveedores.this, "Proveedor eliminado correctamente.", "Completado", JOptionPane.INFORMATION_MESSAGE);
                limpiarCombobox();
                llenarComboBox1();

                // Cerrar recursos
                preparedStatement.close();
                ConexionBD.cerrarConexion(conexion);

            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String Nombre = txtNombre.getText();
        String RNC = txtRNC.getText();
        

        if(Nombre == null || Nombre.length() == 0){
            JOptionPane.showMessageDialog(Proveedores.this, "El campo Nombre no puede estar vacio.", "Error", JOptionPane.ERROR_MESSAGE);
        }        
        else if(RNC == null || RNC.length() == 0){
            JOptionPane.showMessageDialog(Proveedores.this, "El campo RNC no puede estar vacio.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            int Habilitado = 0;

            if(cbHabilitado.isSelected()){
                Habilitado = 1;
            }

            try {

                // Obtener una conexión de la base de datos
                Connection conexion = ConexionBD.obtenerConexion();

                // Consulta SQL para verificar el inicio de sesión
                String consulta = "IF NOT EXISTS (SELECT TOP 1 1 FROM iso610.Proveedores WHERE NombreComercial = ? ) BEGIN INSERT INTO iso610.Proveedores (NombreComercial, RNC, Estado) VALUES (?,?,?) END";
                PreparedStatement preparedStatement = conexion.prepareStatement(consulta);
                preparedStatement.setString(1, Nombre);
                preparedStatement.setString(2, Nombre);
                preparedStatement.setString(3, RNC);                
                preparedStatement.setInt(4, Habilitado);

                int filasInsertadas = preparedStatement.executeUpdate();

                JOptionPane.showMessageDialog(Proveedores.this, "Proveedor agregado correctamente.", "Completado", JOptionPane.INFORMATION_MESSAGE);
                limpiarCombobox();
                llenarComboBox1();
                

                // Cerrar recursos
                preparedStatement.close();
                ConexionBD.cerrarConexion(conexion);

            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Proveedores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JCheckBox cbHabilitado;
    private javax.swing.JComboBox<String> cbProveedores;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRNC;
    // End of variables declaration//GEN-END:variables

    private void llenarComboBox1() {
        ArrayList<String> elementos = new ArrayList<>();
        try {
            
            Connection conexion = ConexionBD.obtenerConexion();

            // Crear y ejecutar la consulta SQL para obtener id y descripción
            String consultaSQL = "SELECT NombreComercial FROM [dbApec].[iso610].Proveedores";
            PreparedStatement statement = conexion.prepareStatement(consultaSQL);
            ResultSet resultSet = statement.executeQuery();

            // Crear objetos ComboBoxItem y agregarlos al JComboBox
            while (resultSet.next()) {
                String elemento = resultSet.getString("NombreComercial");
                elementos.add(elemento);
            }

            // Cerrar la conexión y los recursos
            resultSet.close();
            statement.close();
            conexion.close();
            
            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(elementos.toArray(new String[0]));
            cbProveedores.setModel(model);
            cbProveedores.setSelectedIndex(-1);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void limpiarCombobox() {
        cbProveedores.removeAllItems();        
        txtNombre.setText("");
        txtRNC.setText("");
        cbHabilitado.setSelected(false); 

    }
}
